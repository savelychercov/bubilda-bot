import discord
from discord.ext import commands
from memory.files import MarryData
from library.graphics import SearchContent

class Buttons(discord.ui.View):
    def __init__(self, user, author, *, timeout=3600):
        self.author = author
        self.user = user
        super().__init__(timeout=timeout)
    
    @discord.ui.button(label="–ü—Ä–∏–Ω—è—Ç—å",style=discord.ButtonStyle.green,emoji="üíû")
    async def accept_button(self,interaction:discord.Interaction,button:discord.ui.Button):
        if self.user == interaction.user:   
            await interaction.response.send_message("–ü—Ä–∏–Ω—è—Ç–æ")

    @discord.ui.button(label="–û—Ç–∫–ª–æ–Ω–∏—Ç—å",style=discord.ButtonStyle.red,emoji="üò•")
    async def decline_button(self,interaction:discord.Interaction,button:discord.ui.Button):
        if self.user == interaction.user:
            await interaction.response.send_message("–û—Ç–∫–ª–æ–Ω–µ–Ω–æ")

    @discord.ui.button(label="–û—Ç–º–µ–Ω–∏—Ç—å",style=discord.ButtonStyle.gray,emoji="‚ùå")
    async def cancel_button(self,interaction:discord.Interaction,button:discord.ui.Button):
        if self.author == interaction.user:
            await interaction.response.send_message("–û—Ç–º–µ–Ω–µ–Ω–æ")

class MarryCog(commands.Cog):
    def __init__(self, bot):
        self.bot = bot
    
    @commands.command(brief="–ó–∞–∫–ª—é—á–∏—Ç—å –±—Ä–∞–∫ - marry @user message")
    async def marry(self, ctx, user: discord.Member, *, message = "–£ –≤–∞—Å –µ—Å—Ç—å —á–∞—Å —á—Ç–æ–±—ã –ø—Ä–∏–Ω—è—Ç—å –∑–∞–ø—Ä–æ—Å"):
        gId = str(ctx.guild.id)
        
        marriedOn = MarryData.check_marry(gId, str(ctx.author.id))
        marryWith = MarryData.check_marry(gId, str(user.id))
        if marriedOn:
            await ctx.send("–í—ã —É–∂–µ –∂–µ–Ω–∞—Ç—ã –Ω–∞ "+self.bot.get_user(int(marriedOn)).display_name)
        elif marryWith:
            await ctx.send(user.display_name+" —É–∂–µ –∂–µ–Ω–∞—Ç –Ω–∞ "+self.bot.get_user(int(marryWith)).display_name)
        elif ctx.author == user:
            await ctx.send("–í—ã –Ω–µ –º–æ–∂–µ—Ç–µ –∂–µ–Ω–∏—Ç—å—Å—è –Ω–∞ —Å–µ–±–µ!")
        else:
            embed = discord.Embed(
                color=discord.Color.purple(),
                title=user.display_name+", –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å "+str(ctx.author.display_name)+" —Ö–æ—á–µ—Ç –∂–µ–Ω–∏—Ç—å—Å—è –Ω–∞ –≤–∞—Å",
                description=message
            )
            embed.set_author(name="Wedding Bubilda", icon_url="https://cdn.discordapp.com/attachments/1050725563561676840/1053651366314246164/bub.jpg")
            embed.set_image(url=SearchContent.get_gif("marry", 15))
            msg = await ctx.send(embed=embed,view=Buttons(user = user, author = ctx.author))

            def check(m: discord.Message):
                return m.author.id == self.bot.user.id and m.content in ["–ü—Ä–∏–Ω—è—Ç–æ","–û—Ç–∫–ª–æ–Ω–µ–Ω–æ","–û—Ç–º–µ–Ω–µ–Ω–æ"]

            repmsg = await self.bot.wait_for('message', check = check)
            await msg.edit(embed=embed,view=None)
            match repmsg.content:
                case "–ü—Ä–∏–Ω—è—Ç–æ":
                    MarryData.new_marry(gId, str(ctx.author.id), str(user.id))
                    await ctx.send(ctx.author.display_name+" –∏ "+user.display_name+" –ø–æ–∂–µ–Ω–∏–ª–∏—Å—å!")
                case "–û—Ç–∫–ª–æ–Ω–µ–Ω–æ":
                    await ctx.send(user.display_name+" –æ—Ç–∫–ª–æ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–∞–∫")
                case "–û—Ç–º–µ–Ω–µ–Ω–æ":
                    await ctx.send(ctx.author.display_name+" –æ—Ç–º–µ–Ω–∏–ª –∑–∞–ø—Ä–æ—Å –Ω–∞ –±—Ä–∞–∫")
    
    @commands.command(brief="–†–∞–∑–≤–µ—Å—Ç–∏—Å—å")
    async def divorce(self, ctx):
        gId = str(ctx.guild.id)
        
        marriedOn = MarryData.check_marry(gId, str(ctx.author.id))
        if marriedOn:
            if MarryData.divorce(gId, str(ctx.author.id)):
                await ctx.send("–í—ã —Ä–∞–∑–≤–µ–ª–∏—Å—å —Å "+str(self.bot.get_user(int(marriedOn)).display_name))
        else:
            await ctx.send("–í—ã –Ω–µ –∂–µ–Ω–∞—Ç—ã")

    @commands.command(brief="–ü–æ–∫–∞–∑–∞—Ç—å –Ω–∞ –∫–æ–º –≤—ã –∂–µ–Ω–∞—Ç—ã")
    async def mymarry(self, ctx):
        marriedOn = MarryData.check_marry(str(ctx.guild.id), str(ctx.author.id))
        if marriedOn: await ctx.send("–í—ã –∂–µ–Ω–∞—Ç—ã –Ω–∞ "+str(self.bot.get_user(int(marriedOn)).display_name))
        else: await ctx.send("–í—ã –Ω–µ –∂–µ–Ω–∞—Ç—ã")
    
    @commands.command(brief="–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –±—Ä–∞–∫–∏")
    async def marriages(self, ctx):
        marriages = MarryData.married_users(str(ctx.guild.id))
        if marriages:
            marriagesmessage = "\n"
            for user in marriages:
                marriagesmessage = marriagesmessage+"**‚Ä¢ "+self.bot.get_user(int(user)).display_name+" –∂–µ–Ω–∞—Ç –Ω–∞ "+self.bot.get_user(int(marriages[user])).display_name+"**\n\n"
            embed = discord.Embed(
                color=discord.Color.yellow(),
                title="–í—Å–µ –±—Ä–∞–∫–∏:",
                description=marriagesmessage
            )
            if marriagesmessage != "\n": await ctx.send(embed=embed)
        else: await ctx.send("–ù–∞ —ç—Ç–æ–º —Å–µ—Ä–≤–µ—Ä–µ –Ω–µ—Ç –±—Ä–∞–∫–æ–≤")

async def setup(bot):
   await bot.add_cog(MarryCog(bot))